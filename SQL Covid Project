SELECT *
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE continent is not null
ORDER BY 3,4;

-- select data that I will start with

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE continent is not null
ORDER BY 1,2;

-- Total Cases vs. Total Deaths
-- Shows liklihood of dying if you contract covid in your country

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE location = "United States"
AND continent is not null
ORDER BY 1,2;

DROP VIEW if exists `swift-capsule-343322.Covid_Portfolio_Project.CasesVsDeaths`;
CREATE VIEW `swift-capsule-343322.Covid_Portfolio_Project.CasesVsDeaths`
AS
(
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE location = "United States"
AND continent is not null
);

-- Total Cases vs. Population
-- Shows what percentage of population has been infected with covid

SELECT location, date, population, total_cases, (total_cases/population)*100 as PercentPopulationInfected
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE location = "United States"
AND continent is not null
ORDER BY 1,2;

CREATE VIEW `swift-capsule-343322.Covid_Portfolio_Project.PercentPopulationInfected`
AS
SELECT location, date, population, total_cases, (total_cases/population)*100 as PercentPopulationInfected
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE location = "United States"
AND continent is not null;

-- countries with highest infection rate compared to population

SELECT location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE continent is not null
GROUP BY location, population
ORDER BY PercentPopulationInfected desc;

-- countries with highest death count per population

SELECT location, MAX(total_deaths) as TotalDeathCount
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE continent is not null
GROUP BY location
ORDER BY TotalDeathCount desc;

-- showing continents with highest death count per population

SELECT continent, MAX(total_deaths) as TotalDeathCount
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount desc;

-- Global Numbers

SELECT SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, (SUM(new_deaths)/SUM(new_cases))*100 as DeathPercentage
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths`
WHERE continent is not null
GROUP BY date
ORDER BY 1,2;

-- Joining data on covid deaths and vaccinations

SELECT *
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths` dea
JOIN `swift-capsule-343322.Covid_Portfolio_Project.CovidVaccinations` vac
  ON dea.location = vac.location
  AND dea.date = vac.date;

-- looking at total population vs vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
  , SUM(vac.new_vaccinations) 
  OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths` dea
JOIN `swift-capsule-343322.Covid_Portfolio_Project.CovidVaccinations` vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3;  

-- USE CTE

WITH PopvsVac
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
  , SUM(vac.new_vaccinations) 
  OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths` dea
JOIN `swift-capsule-343322.Covid_Portfolio_Project.CovidVaccinations` vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent is not null
)
SELECT *, (RollingPeopleVaccinated/population)*100 as PercentPeopleVaccinated
FROM PopvsVac;

-- Temp Table

DROP TABLE if exists `swift-capsule-343322.Covid_Portfolio_Project.PercentPopVaccinated`;
CREATE TABLE `swift-capsule-343322.Covid_Portfolio_Project.PercentPopVaccinated`
(
  Continent string,
  Location string,
  Date datetime,
  Population numeric,
  New_vaccinations numeric,
  RollingPeopleVaccinated numeric
)
AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
  , SUM(vac.new_vaccinations) 
  OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths` dea
JOIN `swift-capsule-343322.Covid_Portfolio_Project.CovidVaccinations` vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent is not null;


-- Creating View to store data for later visualizations

CREATE VIEW `swift-capsule-343322.Covid_Portfolio_Project.PercentPopulationVaccinated`
AS
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
  , SUM(vac.new_vaccinations) 
  OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingPeopleVaccinated
FROM `swift-capsule-343322.Covid_Portfolio_Project.CovidDeaths` dea
JOIN `swift-capsule-343322.Covid_Portfolio_Project.CovidVaccinations` vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent is not null
);

SELECT *
FROM `swift-capsule-343322.Covid_Portfolio_Project.PercentPopulationVaccinated`;
